@model ReactCRUDAPI.Models.Client

@{
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
    <div class="form-container">
        <h4 class="pageTitle">Create Client</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            Unique Id
            <div class="col-md-10">
                @Html.EditorFor(model => model.UniqueId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UniqueId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Client Id
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Name
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Tactical Contact
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tactical_Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tactical_Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Operative Contact
            <div class="col-md-10">
                @Html.EditorFor(model => model.Operative_Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Operative_Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Strategic Contact
            <div class="col-md-10">
                @Html.EditorFor(model => model.Strategic_Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Strategic_Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Address
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Country
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

      <div class="form-group custom-form-group">
                <div class="col-md-12">
                    <input type="button" value="Cancel" class="customButton" onclick="location.href='@Url.Action("Index", "Clients")'" />
                    <button type="submit" class="customButton customActionButton">Create</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
